@page "/EquipmentDelete/{Id}"
@using Asset_System.Data
@using LoginAndSession.Models
@using Microsoft.EntityFrameworkCore
@inject EquipmentService equipmentService
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@inject IJSRuntime JSRuntime
@using System.IO
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@using Microsoft.AspNetCore.Components.Forms
@using PdfiumViewer
@using static System.Net.Mime.MediaTypeNames
@using System.Drawing;


<h3>Delete Equipment </h3>

<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="card mt-3 mb-3"
            <div class="card-header">
                <h2 align="center">Equipment</h2>
            </div>

            <EditForm Enhance Model="obj" OnValidSubmit="DeleteEquipmentRecord"></EditForm>

            <div style="margin-left:20px" class="col-md-6">
                   <label for="ShopName" class="control-label">Shop Name</label>
                   <input form="ShopName" class="form-control" @bind="obj.ShopName" />
            </div>

            <div style="margin-left:20px" class="col-md-6">
                   <label for="EquipmentName" class="control-label">Equipment Name</label>
                   <input form="EquipmentName" class="form-control" @bind="obj.EquipmentName" />
            </div>

            <div style="margin-left:20px" class="col-md-6">
                   <label for="EquipmentFunction" class="control-label">Equipment Function</label>
                   <input form="EquipmentFunction" class="form-control" @bind="obj.EquipmentFunction" />
            </div>

            <div style="margin-left:20px" class="col-md-6">
                   <label for="EquipmentNumber" class="control-label">Equipment Number</label>
                   <input form="EquipmentNumber" class="form-control" @bind="obj.EquipmentNumber" />
            </div>

            <div style="margin-left:20px" class="col-md-6">
                    <label for="EquipmentDescription" class="control-label">Equipment Description</label>
                    <input form="EquipmentDescription" class="form-control" @bind="obj.EquipmentDescription" />
            </div>

            <div style="margin-left:20px" class="col-md-6">
                    <label for="Manufacturer" class="control-label">Manufacturer</label>
                    <input form="Manufacturer" class="form-control" @bind="obj.Manufacture"/>
            </div>

             <div style="margin-left:20px" class="col-md-6">
                    <label for="LifeCycle" class="control-label">LifeCycle</label>
                    <input form="LifeCycle" class="form-control" @bind="obj.LifeCycle"/>
            </div>



            <div style="margin-left:20px" class="col-md-6">
                  <label for="Image" class="control-label">Image Upload</label>
                  <InputFile OnChange="HandleFileSelection" />
            </div>
            <div style="margin-left:20px" class="col-md-6">
                    <label for="Document" class="control-label">Document Upload</label>
                   <InputFile OnChange="HandleFileUploadAsync"/>
           </div>



                                                <br />
              <div class="form-group" align="center">
                  <input type="button" class="btn btn-primary" @onclick="@DeleteEquipmentRecord" value="Delete" />
                  <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel" />
              </div>
            <br/>
           </div>
    </div>
</div>

@code {

    [Parameter]
    public string Id { get; set; }
    private LoginAndSession.Models.Equipment obj = new LoginAndSession.Models.Equipment();

    private IBrowserFile selectedFile;
    private string base64Image;

    // Define properties for other form fields

    private async Task HandleFileSelection(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;

    }

    private IBrowserFile inputFile;
    // private string base64Image;

    private async Task HandleFileUploadAsync(InputFileChangeEventArgs e)
    {
        inputFile = e.File;

    }

    protected override async Task OnInitializedAsync()
    {
        obj = await equipmentService.GetEquipmentById(Convert.ToInt32(Id));
    }

    protected async Task DeleteEquipmentRecord()
    {
        await equipmentService.DeleteEquipment(obj);
        NavigationManager.NavigateTo("Equipment");
    }

    protected void Cancel()
    {
        NavigationManager.NavigateTo("Equipment");
    }
}